# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.address import Address  # noqa: F401,E501
from swagger_server import util


class ModelProperty(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, sequence: int=None, address: Address=None):  # noqa: E501
        """ModelProperty - a model defined in Swagger

        :param sequence: The sequence of this ModelProperty.  # noqa: E501
        :type sequence: int
        :param address: The address of this ModelProperty.  # noqa: E501
        :type address: Address
        """
        self.swagger_types = {
            'sequence': int,
            'address': Address
        }

        self.attribute_map = {
            'sequence': 'sequence',
            'address': 'address'
        }
        self._sequence = sequence
        self._address = address

    @classmethod
    def from_dict(cls, dikt) -> 'ModelProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Property of this ModelProperty.  # noqa: E501
        :rtype: ModelProperty
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sequence(self) -> int:
        """Gets the sequence of this ModelProperty.

        The position of the property within the register. The first property is usually from the first entry on the Property register (A1) but could come from a schedule.   # noqa: E501

        :return: The sequence of this ModelProperty.
        :rtype: int
        """
        return self._sequence

    @sequence.setter
    def sequence(self, sequence: int):
        """Sets the sequence of this ModelProperty.

        The position of the property within the register. The first property is usually from the first entry on the Property register (A1) but could come from a schedule.   # noqa: E501

        :param sequence: The sequence of this ModelProperty.
        :type sequence: int
        """

        self._sequence = sequence

    @property
    def address(self) -> Address:
        """Gets the address of this ModelProperty.


        :return: The address of this ModelProperty.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address: Address):
        """Sets the address of this ModelProperty.


        :param address: The address of this ModelProperty.
        :type address: Address
        """

        self._address = address
