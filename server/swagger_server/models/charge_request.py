# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.application_request import ApplicationRequest  # noqa: F401,E501
from swagger_server.models.charge_request_title_guarantee import ChargeRequestTitleGuarantee  # noqa: F401,E501
from swagger_server.models.object import Object  # noqa: F401,E501
from swagger_server.models.organisation import Organisation  # noqa: F401,E501
from swagger_server.models.proprietor import Proprietor  # noqa: F401,E501
from swagger_server.models.title_number import TitleNumber  # noqa: F401,E501
from swagger_server import util


class ChargeRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title_number: TitleNumber=None, application_type: str=None, borrowers: List[Proprietor]=None, lender: Organisation=None, title_guarantee: ChargeRequestTitleGuarantee=None, additional_provisions: List[Object]=None):  # noqa: E501
        """ChargeRequest - a model defined in Swagger

        :param title_number: The title_number of this ChargeRequest.  # noqa: E501
        :type title_number: TitleNumber
        :param application_type: The application_type of this ChargeRequest.  # noqa: E501
        :type application_type: str
        :param borrowers: The borrowers of this ChargeRequest.  # noqa: E501
        :type borrowers: List[Proprietor]
        :param lender: The lender of this ChargeRequest.  # noqa: E501
        :type lender: Organisation
        :param title_guarantee: The title_guarantee of this ChargeRequest.  # noqa: E501
        :type title_guarantee: ChargeRequestTitleGuarantee
        :param additional_provisions: The additional_provisions of this ChargeRequest.  # noqa: E501
        :type additional_provisions: List[Object]
        """
        self.swagger_types = {
            'title_number': TitleNumber,
            'application_type': str,
            'borrowers': List[Proprietor],
            'lender': Organisation,
            'title_guarantee': ChargeRequestTitleGuarantee,
            'additional_provisions': List[Object]
        }

        self.attribute_map = {
            'title_number': 'title_number',
            'application_type': 'application_type',
            'borrowers': 'borrowers',
            'lender': 'lender',
            'title_guarantee': 'title_guarantee',
            'additional_provisions': 'additional_provisions'
        }
        self._title_number = title_number
        self._application_type = application_type
        self._borrowers = borrowers
        self._lender = lender
        self._title_guarantee = title_guarantee
        self._additional_provisions = additional_provisions

    @classmethod
    def from_dict(cls, dikt) -> 'ChargeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChargeRequest of this ChargeRequest.  # noqa: E501
        :rtype: ChargeRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title_number(self) -> TitleNumber:
        """Gets the title_number of this ChargeRequest.


        :return: The title_number of this ChargeRequest.
        :rtype: TitleNumber
        """
        return self._title_number

    @title_number.setter
    def title_number(self, title_number: TitleNumber):
        """Sets the title_number of this ChargeRequest.


        :param title_number: The title_number of this ChargeRequest.
        :type title_number: TitleNumber
        """
        if title_number is None:
            raise ValueError("Invalid value for `title_number`, must not be `None`")  # noqa: E501

        self._title_number = title_number

    @property
    def application_type(self) -> str:
        """Gets the application_type of this ChargeRequest.


        :return: The application_type of this ChargeRequest.
        :rtype: str
        """
        return self._application_type

    @application_type.setter
    def application_type(self, application_type: str):
        """Sets the application_type of this ChargeRequest.


        :param application_type: The application_type of this ChargeRequest.
        :type application_type: str
        """
        allowed_values = ["creation_of_new_charge"]  # noqa: E501
        if application_type not in allowed_values:
            raise ValueError(
                "Invalid value for `application_type` ({0}), must be one of {1}"
                .format(application_type, allowed_values)
            )

        self._application_type = application_type

    @property
    def borrowers(self) -> List[Proprietor]:
        """Gets the borrowers of this ChargeRequest.


        :return: The borrowers of this ChargeRequest.
        :rtype: List[Proprietor]
        """
        return self._borrowers

    @borrowers.setter
    def borrowers(self, borrowers: List[Proprietor]):
        """Sets the borrowers of this ChargeRequest.


        :param borrowers: The borrowers of this ChargeRequest.
        :type borrowers: List[Proprietor]
        """

        self._borrowers = borrowers

    @property
    def lender(self) -> Organisation:
        """Gets the lender of this ChargeRequest.


        :return: The lender of this ChargeRequest.
        :rtype: Organisation
        """
        return self._lender

    @lender.setter
    def lender(self, lender: Organisation):
        """Sets the lender of this ChargeRequest.


        :param lender: The lender of this ChargeRequest.
        :type lender: Organisation
        """

        self._lender = lender

    @property
    def title_guarantee(self) -> ChargeRequestTitleGuarantee:
        """Gets the title_guarantee of this ChargeRequest.


        :return: The title_guarantee of this ChargeRequest.
        :rtype: ChargeRequestTitleGuarantee
        """
        return self._title_guarantee

    @title_guarantee.setter
    def title_guarantee(self, title_guarantee: ChargeRequestTitleGuarantee):
        """Sets the title_guarantee of this ChargeRequest.


        :param title_guarantee: The title_guarantee of this ChargeRequest.
        :type title_guarantee: ChargeRequestTitleGuarantee
        """

        self._title_guarantee = title_guarantee

    @property
    def additional_provisions(self) -> List[Object]:
        """Gets the additional_provisions of this ChargeRequest.


        :return: The additional_provisions of this ChargeRequest.
        :rtype: List[Object]
        """
        return self._additional_provisions

    @additional_provisions.setter
    def additional_provisions(self, additional_provisions: List[Object]):
        """Sets the additional_provisions of this ChargeRequest.


        :param additional_provisions: The additional_provisions of this ChargeRequest.
        :type additional_provisions: List[Object]
        """

        self._additional_provisions = additional_provisions
