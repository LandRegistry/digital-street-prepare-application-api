# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TransferRequestGuarantee(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, guarantee_type: str=None, modifications: str=None):  # noqa: E501
        """TransferRequestGuarantee - a model defined in Swagger

        :param guarantee_type: The guarantee_type of this TransferRequestGuarantee.  # noqa: E501
        :type guarantee_type: str
        :param modifications: The modifications of this TransferRequestGuarantee.  # noqa: E501
        :type modifications: str
        """
        self.swagger_types = {
            'guarantee_type': str,
            'modifications': str
        }

        self.attribute_map = {
            'guarantee_type': 'guarantee_type',
            'modifications': 'modifications'
        }
        self._guarantee_type = guarantee_type
        self._modifications = modifications

    @classmethod
    def from_dict(cls, dikt) -> 'TransferRequestGuarantee':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TransferRequest_guarantee of this TransferRequestGuarantee.  # noqa: E501
        :rtype: TransferRequestGuarantee
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guarantee_type(self) -> str:
        """Gets the guarantee_type of this TransferRequestGuarantee.


        :return: The guarantee_type of this TransferRequestGuarantee.
        :rtype: str
        """
        return self._guarantee_type

    @guarantee_type.setter
    def guarantee_type(self, guarantee_type: str):
        """Sets the guarantee_type of this TransferRequestGuarantee.


        :param guarantee_type: The guarantee_type of this TransferRequestGuarantee.
        :type guarantee_type: str
        """
        allowed_values = ["full_title_guarantee", "limited_title_guarantee"]  # noqa: E501
        if guarantee_type not in allowed_values:
            raise ValueError(
                "Invalid value for `guarantee_type` ({0}), must be one of {1}"
                .format(guarantee_type, allowed_values)
            )

        self._guarantee_type = guarantee_type

    @property
    def modifications(self) -> str:
        """Gets the modifications of this TransferRequestGuarantee.

        Any modifications on the title guarantee.  # noqa: E501

        :return: The modifications of this TransferRequestGuarantee.
        :rtype: str
        """
        return self._modifications

    @modifications.setter
    def modifications(self, modifications: str):
        """Sets the modifications of this TransferRequestGuarantee.

        Any modifications on the title guarantee.  # noqa: E501

        :param modifications: The modifications of this TransferRequestGuarantee.
        :type modifications: str
        """

        self._modifications = modifications
